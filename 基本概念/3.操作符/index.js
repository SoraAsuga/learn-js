/** 一元操作符
 * 1.定义变量 a、b，分别设置初始值 1
 * 2.输出 ++a + 1 的值
 * 3.输出 b++ + 1 的值
 * 
 * 4.定义变量 str，设置初始值 "a"
 * 5.定义变量 bool, 设置初始值 true
 * 6.输出 str++，输出 bool--
 * 
 * 7.定义变量 str2，设置初始值 "2"
 * 8.定义变量 bool2, 设置初始值 false
 * 9.输出 +str，+str2，输出 +bool，+bool2
 * 10.输出 -str，-str2，输出 -bool，-bool2
 */

/** 布尔操作符
 * 1.输出 !a，!str，!bool，并说明为什么
 * 2.输出 a && b，输出 a && bool2，并说明为什么
 * 3.输出 a || b，输出 bool2 || str，并说明为什么
 */

/** 相等操作符
 * 1.输出 a == b，输出 a === b，并说明为什么
 * 2.输出 a == str2，输出 a === str2，并说明为什么
 */

/** 条件操作符
 * 使用三目运算符进行以下代码编写：
 * 例：console.log(a === 2 ? 'a = 2' : 'a != 2'); √
 *     a === 2 ? console.log('a = 2') : console.log('a != 2'); × // 语法正确，写法不推荐
 * 
 * 1.当 a 和 b 相等时，输出 "a 等于 b"，否则输出 "a 不等于 b"
 * 2.当 a 和 str2 全等时，输出 "a 全等 str2"，否则输出 "a 不全等 str2"
 */

/** if 语句
 * 1.用 if 语句重写上面 “条件操作符的题目”
 * 2.a 和 str2 全等时，输出 "a === str2"，否则，a 和 b 全等时，输出 "a === b"，否则，输出 "a !== str2 且 a !== b"
 */

/** while 语句
 * 1.定义变量 i，赋值 5
 * 2.定义 while 循环，每次循环 i 都变小 1（分别用 表达式 和 两种自减运算符 实现）
 * 3.每次循环输出 i 的值
 */

/** for 语句
 * 1.用 for 循环实现上面 while 的题目
 * 2.定义一个循环，定义一个变量 j，j 初始为 0，当 j 大于 10 时退出循环，打印每次循环 j 的值
 * 3.在 2 的基础上，每当 j 能被 3 整除时，跳过本次循环并且不打印 j 的值
 * 4.在 3 的基础上，当 j 能被 2 和 3 同时整除时，退出循环
 */

/** switch 语句
 * 1.定义一个循环：定义一个变量 k，初始为 0，当 k 大于 11 时退出循环
 *   当 k 等于 3 时，输出 "k = 3"
 *   当 k 等于 5 时，输出 "k = 5"
 *   当 k 等于 7 或 11 时，输出 "k = 7 或 11"
 * 
 * 2.定义一个循环：定义一个变量 l，初始为 0，当 l 大于 10 时退出循环
 *   当 k 能被 2 整除时，输出 "k 是 2 的公倍数" （k 需要替换为当前 k 的值）
 *   当 k 能被 3 整除时，输出 "k 是 2 的公倍数" （k 需要替换为当前 k 的值）
 *   当 k 能被 5 整除时，输出 "k 是 2 的公倍数" （k 需要替换为当前 k 的值）
 */
